#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main *:5000
    acl url_static       path_beg       -i /static /images /javascript /stylesheets
    acl url_static       path_end       -i .jpg .gif .png .css .js

    use_backend static          if url_static
    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend static
    balance     roundrobin
    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend app
    balance     roundrobin
    server  app1 127.0.0.1:5001 check
    server  app2 127.0.0.1:5002 check
    server  app3 127.0.0.1:5003 check
    server  app4 127.0.0.1:5004 check
#---------------------------------------------------------------------
# impala haproxy config
#---------------------------------------------------------------------
frontend impala-shell
    description "Impala Shell"
    bind *:21000
    mode tcp
    option tcplog
    default_backend impala-shell

backend impala-shell
    description "Impala Shell"
    # Hue needs sticky sessions
    #balance leastconn
    balance source
    mode tcp
    acl internal_networks src 10.254.2.0/24 127.0.0.1
    tcp-request content reject if ! internal_networks
    server bigdata-worker01.lab bigdata-worker01.lab:2100ÃŸ0 check
    server bigdata-worker02.lab bigdata-worker02.lab:21000 check
    server bigdata-worker03.lab bigdata-worker03.lab:21000 check
    server bigdata-worker04.lab bigdata-worker04.lab:21000 check
    server bigdata-worker05.lab bigdata-worker05.lab:21000 check
    server bigdata-worker06.lab bigdata-worker06.lab:21000 check
    server bigdata-worker07.lab bigdata-worker07.lab:21000 check
    server bigdata-worker08.lab bigdata-worker08.lab:21000 check

frontend impala-jdbc
    description "Impala JDBC"
    bind *:21050
    mode tcp
    option tcplog
    default_backend impala-jdbc

backend impala-jdbc
    description "Impala JDBC"
    # Hue needs sticky sessions
    #balance leastconn
    balance source
    mode tcp
    acl internal_networks src 10.254.2.0/24 127.0.0.1
    tcp-request content reject if ! internal_networks
    server bigdata-worker01.lab bigdata-worker01.lab:21050 check
    server bigdata-worker02.lab bigdata-worker02.lab:21050 check
    server bigdata-worker03.lab bigdata-worker03.lab:21050 check
    server bigdata-worker04.lab bigdata-worker04.lab:21050 check
    server bigdata-worker05.lab bigdata-worker05.lab:21050 check
    server bigdata-worker06.lab bigdata-worker06.lab:21050 check
    server bigdata-worker07.lab bigdata-worker07.lab:21050 check
    server bigdata-worker08.lab bigdata-worker08.lab:21050 check